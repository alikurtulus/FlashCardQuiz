{"version":3,"sources":["FlashCard.js","FlashCardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","key","FlashCardList","flashCards","id","App","setFlashCards","categories","setCategories","categoryEl","amountEl","axios","get","then","res","data","trivia_categories","decodeString","str","textArea","document","createElement","innerHTML","value","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f046dc6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nexport default function Flashcard({ flashcard }) {\r\n  const [flip, setFlip] = useState(false)\r\n  const [height, setHeight] = useState('initial')\r\n\r\n  const frontEl = useRef()\r\n  const backEl = useRef()\r\n\r\n  function setMaxHeight() {\r\n    const frontHeight = frontEl.current.getBoundingClientRect().height\r\n    const backHeight = backEl.current.getBoundingClientRect().height\r\n    setHeight(Math.max(frontHeight, backHeight, 100))\r\n  }\r\n\r\n  useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options])\r\n  useEffect(() => {\r\n    window.addEventListener('resize', setMaxHeight)\r\n    return () => window.removeEventListener('resize', setMaxHeight)\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={`card ${flip ? 'flip' : ''}`}\r\n      style={{ height: height }}\r\n      onClick={() => setFlip(!flip)}\r\n    >\r\n      <div className=\"front\" ref={frontEl}>\r\n        {flashcard.question}\r\n        <div className=\"flashcard-options\">\r\n          {flashcard.options.map(option => {\r\n            return <div className=\"flashcard-option\" key={option}>{option}</div>\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport FlashCard from './FlashCard'\r\n\r\nconst FlashCardList = ({flashCards}) => {\r\n    return (\r\n        <div className=\"card-grid\">\r\n            {flashCards.map(flashcard => {\r\n                return <FlashCard key={flashcard.id} flashcard={flashcard} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default FlashCardList","import React, {useState, useEffect, useRef} from 'react';\nimport FlashCardList from './FlashCardList'\nimport './app.css'\nimport axios from 'axios'\n\nfunction App() {\n  const [flashCards, setFlashCards] = useState([])\n  const [categories, setCategories] = useState([])\n\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n\n  useEffect( () => {\n    axios\n    .get(`https://opentdb.com/api_category.php?`)\n    .then(res => {\n       setCategories(res.data.trivia_categories)\n    })\n  })\n\n\n  const decodeString =(str) => {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n\n  }\n  const handleSubmit = e => {\n    e.preventDefault()\n           \n    axios\n        .get(`https://opentdb.com/api.php`,{\n          params: {\n            amount:amountEl.current.value,\n            category:categoryEl.current.value\n          }\n        })\n        .then(res => {\n          setFlashCards(res.data.results.map((questionItem,index) => {\n            const answer = decodeString(questionItem.correct_answer)\n            let options = [...questionItem.incorrect_answers.map( a => decodeString(a))\n              ,answer ]\n           \n            return {\n              id:`${index}-${Date.now()}`,\n              question:  decodeString(questionItem.question),\n              answer: answer,\n              options: options.sort(() => Math.random() - .5)\n\n\n            }\n          }))  \n        })\n  }\n  return (\n    <>\n      <form className='header' onSubmit={handleSubmit}>\n        <div className='form-group'>\n          <label htmlFor='category'>Category</label>\n          <select id='category' ref={categoryEl}>\n            {categories.map(category => {\n              return <option key={category.id} value={category.id}>{category.name}\n              </option>\n            })}\n          </select>\n        </div>\n        <div className='form-group'>\n            <label htmlFor='category'>Number of Questions</label>\n            <input type='number' id='amount' min='1' step='1' defaultValue={10} ref={amountEl}/>\n        </div>\n        <div className='form-group'>\n           <button className='btn'>Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n       <FlashCardList flashCards={flashCards}/>\n       </div>\n    </>\n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}